1) the program create a buffer of 76 bytes on the stack then put an input from the user inside it
2) because there is no size limit for the input, we can exploit this program with a buffer overflow
3) open the binary with gdb-peda (Python Exploit Development Assistance for GDB)
4) type "pattern create 100" (you can replace 100 by any large number) and copy the value you get
5) run the binary and put the pattern in the gets input, copy the hex EIP register value
6) type "pattern offset <eip-value>" with the hex EIP register value
7) here we see 76 so that confirm the offset we need to overwrite EIP is 76 bytes
